{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(go test:*)",
      "Bash(go build:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(timeout:*)",
      "Bash(git commit:*)",
      "Bash(grep:*)",
      "Bash(git rebase:*)",
      "Bash(git stash:*)",
      "Read(//Users/jmichel/code/github.com/jonasrmichel/**)",
      "Read(//Users/jmichel/code/github.com/jonasrmichel/py-xgaicc/**)",
      "Read(//Users/jmichel/code/github.com/jonasrmichel/py-xgaicc/**)",
      "Read(//Users/jmichel/code/github.com/jonasrmichel/py-xgaicc/py-xgaicc.git/**)",
      "Read(//Users/jmichel/code/**)",
      "Bash(git log:*)",
      "Bash(curl:*)",
      "Read(//Users/jmichel/.crypto-trader/sessions/**)",
      "Read(//Users/jmichel/.crypto-trader/**)",
      "Read(//Users/jmichel/.crypto-trader/sessions/**)",
      "Read(//Users/jmichel/.crypto-trader/sessions/**)",
      "Read(//Users/jmichel/.crypto-trader/sessions/**)",
      "Bash(for file in ./.crypto-trader/sessions/session_*175612*.json)",
      "Bash(done)",
      "Bash(for file in ./.crypto-trader/sessions/session_*175619*.json)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:www.freqtrade.io)",
      "WebSearch",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "Bash(gofmt:*)",
      "Bash(go run:*)",
      "Bash(git checkout:*)",
      "Bash(chmod:*)",
      "Bash(python3:*)",
      "Bash(kill:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(brew install:*)",
      "Bash(freqtrade:*)",
      "Read(//private/tmp/freqtrade-data/logs/**)",
      "Bash(./crypto-trader)",
      "Read(//tmp/freqtrade-data/configs/**)",
      "Read(//private/tmp/freqtrade-data/user_data/strategies/**)",
      "Read(//private/tmp/freqtrade-data/**)",
      "Bash(./test_kraken_bot.sh:*)",
      "Bash(lsof:*)",
      "Bash(./test_gswap_bot.sh:*)",
      "Read(//private/tmp/**)",
      "Bash(pkill:*)",
      "Bash(python:*)",
      "Bash(/tmp/freqtrade-data/venv/bin/python user_data/freqtrade_custom_exchange.py trade --config configs/config_gswap_test.json --strategy SampleStrategy)",
      "Bash(pip3 install:*)",
      "Bash(export TA_INCLUDE_PATH=/opt/homebrew/opt/ta-lib/include)",
      "Bash(export TA_LIBRARY_PATH=/opt/homebrew/opt/ta-lib/lib)",
      "Bash(/tmp/restart_gswap_agent.sh:*)",
      "Bash(/Users/jmichel/code/github.com/jonasrmichel/crypto-trader/internal/freqtrade-bridge/venv/bin/python /tmp/freqtrade-data/user_data/freqtrade_custom_exchange.py --version)",
      "Bash(/Users/jmichel/code/github.com/jonasrmichel/crypto-trader/internal/freqtrade-bridge/venv/bin/python user_data/freqtrade_custom_exchange.py trade --config configs/config_gswap_test_local.json --strategy SampleStrategy)",
      "Bash(/Users/jmichel/code/github.com/jonasrmichel/crypto-trader/scripts/start-freqtrade-bridge.sh:*)",
      "Bash(./venv/bin/python:*)",
      "Bash(git clone:*)",
      "Bash(/Users/jmichel/code/github.com/jonasrmichel/crypto-trader/internal/freqtrade-bridge/venv/bin/python -c \"from user_data.strategies.Strategy001 import Strategy001; print(''Strategy001 loaded successfully'')\")",
      "Bash(git reset:*)",
      "Read(/Users/jmichel/.crypto-trader/**)",
      "Bash(cat:*)",
      "Bash(/dev/null ls internal/freqtrade-bridge/exchanges/)",
      "Bash(for i in 001 002 003 004)",
      "Bash(do)",
      "Bash(file=\"/private/tmp/freqtrade-data/user_data_6ff42c19-f809-4c19-b341-af33a132de90/strategies/Strategy$i.py\")",
      "Bash(if [ -f \"$file\" ])",
      "Bash(then)",
      "Bash(echo:*)",
      "Bash(fi)",
      "Bash(for file in /Users/jmichel/code/github.com/jonasrmichel/crypto-trader/internal/freqtrade-bridge/strategies/Strategy*.py)",
      "Bash(else)",
      "Bash(for id in 692b1e10-b4a6-44bc-a61b-66eee0999b9f fc5c6692-e522-4995-9b1e-c00125d487b0 8e72a090-6328-49d3-9131-17bbe17eac84)",
      "Bash(do config=\"configs/config_$id.json\")",
      "Bash(if [ -f \"$config\" ])",
      "Bash(./scripts/start-freqtrade-bridge.sh:*)",
      "Bash(sudo rm:*)",
      "Bash(./venv/bin/pip install --upgrade pip)",
      "Bash(./venv/bin/pip install:*)",
      "Read(/opt/homebrew/opt/**)",
      "Bash(/opt/homebrew/opt/python@3.12/bin/python3 -m venv internal/trademaster-bridge/venv)",
      "Read(/opt/homebrew/Cellar/python@3.12/3.12.8/bin/**)",
      "Bash(/opt/homebrew/opt/python@3.12/bin/python3.12 -m venv internal/trademaster-bridge/venv)",
      "Bash(internal/trademaster-bridge/venv/bin/pip install --upgrade pip)",
      "Bash(internal/trademaster-bridge/venv/bin/python:*)",
      "Bash(internal/trademaster-bridge/venv/bin/pip list)",
      "Bash(./scripts/start-trademaster-bridge.sh:*)",
      "Bash(internal/trademaster-bridge/venv/bin/pip install flask flask-cors numpy scikit-learn joblib pandas)",
      "Bash(internal/trademaster-bridge/venv/bin/pip install python-dotenv)",
      "Bash(internal/trademaster-bridge/venv/bin/pip install joblib)",
      "Bash(/dev/null)",
      "Bash(git pull:*)",
      "Bash(git fetch:*)",
      "Bash(go get:*)",
      "Bash(./test_osmi_stability)",
      "Bash(/Users/jmichel/code/github.com/xgaicc/xgaicc/xgllama/build/xgllama:*)",
      "Read(/Users/jmichel/**)",
      "Read(/Users/jmichel/**)",
      "Read(/Users/jmichel/Library/Caches/xgaicc/models/**)",
      "Read(/Users/jmichel/Library/Caches/xgaicc/models/**)",
      "Bash(./list-models)",
      "Read(//Users/jmichel/**)",
      "Bash(env)",
      "Bash(./crypto-trader --version)",
      "Bash(CHAT_MODEL=/Users/jmichel/Library/Caches/xgaicc/models/gWBkQ4FxCsvRrD4BG1QDXrJp6BVQZihFm9UyKNEnoZeupV go run cmd/test-xgllama/main.go)",
      "Bash(find:*)",
      "Bash(./scripts/start-xgllm.sh:*)",
      "Bash(export CHAT_API_ENDPOINT=\"xgllm\")",
      "Bash(export XGLLM_PEER_ID=\"12D3KooWPLQ93BXgGYhKmYC8o58fNbz4fTnSL2EPJSJTe68mXEoq\")",
      "Bash(export XGLLM_MODEL_HASH=\"gWBkQ4FxCsvRrD4BG1QDXrJp6BVQZihFm9UyKNEnoZeupV\")",
      "Bash(export:*)",
      "Bash(./test-xgllm-integration.sh:*)",
      "Bash(./test-gswap-bridge)",
      "Bash(go fmt:*)",
      "Bash(./crypto-trader-test)",
      "Bash(CHAT_MODEL=\"\" ./crypto-trader-test)",
      "Bash(CHAT_API_ENDPOINT=\"\" ./crypto-trader-test)",
      "Bash(CHAT_API_ENDPOINT=\"\" CHAT_MODEL=\"\" ./crypto-trader-test)",
      "Bash(npx create-react-app:*)",
      "Bash(npm install:*)",
      "Bash(npx tailwindcss init:*)",
      "Bash(./node_modules/.bin/tailwindcss:*)",
      "Bash(npm run build:*)",
      "Bash(npm start)",
      "Bash(PORT=3001 npm start)",
      "Bash(BROWSER=none PORT=3002 npm start)",
      "Bash(npm run start:*)",
      "Bash(npm create:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm run dev:*)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(./web-api)",
      "Bash(open http://localhost:5173/models)",
      "Bash(open http://localhost:5173/algorithms)",
      "Bash(open:*)",
      "Bash(./crypto-trader --help)",
      "Bash(git rm:*)",
      "WebFetch(domain:swap.gala.com)",
      "Bash(ngrok:*)",
      "Bash(npx localtunnel:*)",
      "WebFetch(domain:ngrok.com)",
      "Bash(for:*)",
      "Bash(do sed -i '' 's|http://localhost:8200||g' \"$file\")",
      "Bash(./make-responsive.sh:*)",
      "Bash(./start-ngrok.sh)",
      "Bash(./web-api --url=crypto-trader-backend.ouchwowboing.io)",
      "Bash(LMSTUDIO_API_URL=https://lm-studio.ouchwowboing.io ./web-api)",
      "Bash(git merge:*)",
      "WebFetch(domain:chat.snichols.io)",
      "WebFetch(domain:www.osmi.ai)",
      "WebFetch(domain:personal.ntu.edu.sg)",
      "WebFetch(domain:api.etherscan.io)",
      "Bash(git branch:*)",
      "Bash(npm run test-swap:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/Users/jmichel/code/github.com/jonasrmichel/xgaicc",
      "/private/tmp/freqtrade-data/logs",
      "/private/tmp/freqtrade-data",
      "/private/tmp"
    ]
  }
}